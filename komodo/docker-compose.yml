services:
  mongo:
    image: mongo:${MONGO_IMAGE_TAG:-8.0}
    labels:
      - komodo.skip=true # Prevent Komodo from stopping with StopAllContainers
      - com.centurylinklabs.watchtower.enable=${WATCHTOWER_ENABLE:-true} # watchtower
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    # ports:
    #   - 27017:27017
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${KOMODO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_DB_PASSWORD}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 10
    networks:
      - db
  
  core:
    image: ${GHCR_IMAGE_PROXY:-ghcr.io}/moghtech/komodo-core:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    labels:
      - komodo.skip=true # Prevent Komodo from stopping with StopAllContainers
      - com.centurylinklabs.watchtower.enable=${WATCHTOWER_ENABLE:-true} # watchtower
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - ${PORT:-9120}:9120
    # env_file: ./compose.env
    environment:
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD}
    volumes:
      ## Core cache for repos for latest commit hash / contents
      - repo-cache:/repo-cache
      ## Store sync files on server
      - ${MNT_DIR:-/mnt/docker}/komodo/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      - ${MNT_DIR:-/mnt/docker}/komodo/core.config.toml:/config/config.toml
    ## Allows for systemd Periphery connection at 
    ## "http://host.docker.internal:8120"
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - db
      - web

volumes:
  # Mongo
  mongo-data:
  mongo-config:
  # Core
  repo-cache:

networks:
  db:
  web:
    external: true
