services:
  db:
    image: postgres:${POSTGRES_IMAGE_TAG:-17.2}
    container_name: ${POSTGRES_CONTAINER_NAME:-metabase_db}
    environment:
      POSTGRES_USER: metabase
      POSTGRES_DB: metabaseappdb
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${MNT_DIR:-/mnt/docker}/metabase/db:/var/lib/postgresql/data
    networks:
      - metanet1

  app:
    image: metabase/metabase:latest
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - ${PORT:-3000}:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabaseappdb
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: db
    networks:
      - metanet1
      - web
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    labels:
      # traefik
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.metabase.rule=Host(`${HOST:-metabase.localhost}`)
      - traefik.http.services.metabase.loadbalancer.server.port=3000
      # watchtower
      - com.centurylinklabs.watchtower.enable=${WATCHTOWER_ENABLE:-true}

networks:
  metanet1:
    driver: bridge
  web:
    external: true
